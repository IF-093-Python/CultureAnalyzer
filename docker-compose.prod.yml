version: '3.6'

services:
  db:
    image: postgres
    container_name: pg01
    restart: always
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    ports:
      - ${PG_PORT_OUT}:${PG_PORT_IN}
    volumes:
      - db_data:/var/lib/postgresql/data/
    networks:
      - database_network

  redis:
    image: redis
    container_name: rd01
    command: redis-server --appendonly yes
    restart: always
    ports:
      - ${RD_PORT_OUT}:${RD_PORT_IN}
    volumes:
      - redis_data:/data
    networks:
      - redis_network

  app:
    build: .
    container_name: app01
    restart: always
    env_file: .env
    volumes:
      - .:/opt/services/CultureAnalyzer
      - static:/opt/services/CultureAnalyzer/static
      - media:/opt/services/CultureAnalyzer/media
    networks:
      - database_network
      - redis_network
      - nginx_network
    depends_on:
      - db
      - redis

  nginx:
    image: nginx
    container_name: ng01
    restart: always
    command: ./wait-for-it.sh app:8000 -s -t 70 -- /bin/sh -c "nginx -g 'daemon off;'"
    ports:
      - ${NG_PORT_OUT}:${NG_PORT_IN}
      - ${HG_HTTPS_PORT_OUT}:${HG_HTTPS_PORT_IN}
    volumes:
      - ./config/nginx/prod.conf:/etc/nginx/conf.d/default.conf
      - ./scripts/wait-for-it.sh:/wait-for-it.sh
      - static:/opt/services/CultureAnalyzer/static
      - media:/opt/services/CultureAnalyzer/media
      - /etc/letsencrypt/live/culture-analyzer.pp.ua:/etc/ssl/certs
      - /etc/letsencrypt/archive/culture-analyzer.pp.ua:/etc/archive/culture-analyzer.pp.ua
    networks:
      - nginx_network
    depends_on:
      - app

networks:
  database_network:
    driver: bridge
  redis_network:
    driver: bridge
  nginx_network:
    driver: bridge

volumes:
  db_data:
  redis_data:
  static:
  media:
